<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
		<context:annotation-config/><!--이게 있어야 오토 와이어드 사용 가능 -->
		<!-- 이제 프로퍼티 가져온다 -->
		<context:property-placeholder location = "classpath:mybatis/prop/jdbc.properties"/>
		<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource"> 
		<!-- 이놈을 객체로 만들거에요 id는 나중에 쓸 꼐획이다. 이제 setter가 거의다 있으니 이를 쓰자 -->
			<!-- <property name = "driverClassName" value = "oracle.jdbc.OracleDriver">변수명이니 대소문자 구분</property> --> 
			<property name = "driverClassName" value = "${jdbc.driver}"><!-- 변수명이니 대소문자 구분 --></property> 
			<!-- 위에 로드된 properti에 매칭된 변수를 이용해 값을 넣는다 -->
			
			<property name = "url" value = "${jdbc.url}"><!-- 변수명이니 대소문자 구분 --></property> 
			<property name = "username" value = "${jdbc.user}"><!-- 변수명이니 대소문자 구분 --></property>
			<property name = "password" value = "${jdbc.pwd}"><!-- 변수명이니 대소문자 구분 --></property>
			<property name = "maxActive" value = "${jdbc.maxActive}"><!-- 변수명이니 대소문자 구분 --></property>
			<property name = "maxIdle" value = "${jdbc.maxIdle}"/>
			<property name = "minIdle" value = "${jdbc.minIdle}"/>
		</bean>		
		
		<bean id = "factory" class = "org.mybatis.spring.SqlSessionFactoryBean">
			<property name = "dataSource" ref = "ds"></property>
			<!-- 여기에 쓰려고 위의 id를 ds라고 분류한 것 -->
			<!-- 이제 매퍼를 연결해야하고 member.xml 그게 이거-->
			<property name = "mapperLocations" value = "classpath:mybatis/mapper/*.xml"></property>
			<!-- 매퍼를 한 폴더에 몰아 두고 확장자도 전부 xml이니까  -->
			<!-- 이를 가지고 sql session을 만드는 것 == 템플릿을 의미한다. -->
		</bean> 
		
		<!-- 템플릿 생성, 이게 sqlsession과 같다. 여기서 sqlSession templete을 생성하지만
		우리는 바로 dao들을 정의해야한다. 이렇게 되면 DAO들 안에서  factory를  멤버로 잡아야할 것으로 보이지만
		스프링에서는 sqlsession 템플릿을 자체적으로 관리됨으로 sqlsessiontemplete을 DAO에 넣고 사용해야한다
		그런 관리적인 측면에서 좋아진 애가 sql session templete이다.
		 -->
		 
		 <bean id = "sst" class = "org.mybatis.spring.SqlSessionTemplate">
		 <!-- 처음 빨간 줄이 뜨는 이유는 기본 생성자가 없다는 의미 -->
		 	<constructor-arg ref = "factory"/> <!-- 얘를 필요로하니 이것만 -->
		 </bean>
		
		<!-- DAO를 만들어보자 -->
		<bean id = "memDao" class="mybatis.dao.MemDAO"/>
		<!-- 많은 양의 dao는 mybatis.dao에만 넣고 component scan연결을 한다 그러면 전체를 다 지정할 수 있다.
			@controller 를 반드시 쓰듯이 뭔가를 써야 자동으로 만들어지는 데
			DAO에는 아무것도 안 써있으니까 componentscan은 지정을 안해줬으니까 안되는 것이다.
			그래서 지금은 이렇게하고 오후에는 이를 component scan으로 만들고
			클래스를 컴포넌트로 @하면 되는 것을 확인하자-->
			
		<!-- 이게 언제 만들었는 지 알고 싶을 떄 DAO에 생성자 하나 만들면된다. DAO로 가자 -->	
		
		
</beans>
